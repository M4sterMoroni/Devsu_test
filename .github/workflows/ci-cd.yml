name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        working-directory: ./test
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run migrations
        working-directory: ./test
        run: |
          python manage.py makemigrations
          python manage.py migrate
          
      - name: Run tests
        working-directory: ./test
        env:
          DJANGO_SETTINGS_MODULE: demo.settings
          PYTHONPATH: ${{ github.workspace }}/test
          DJANGO_SECRET_KEY: "test-key-for-ci"
        run: |
          pytest

  build-and-push:
    needs: [test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push Docker image
        working-directory: ./test
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure kubectl
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          
      - name: Deploy to Kubernetes
        working-directory: ./test
        run: |
          kubectl apply -f k8s/
          kubectl set image deployment/django-api django-api=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          kubectl rollout status deployment/django-api
          
      - name: Verify Deployment
        run: |
          kubectl get deployment django-api -o wide
          kubectl get pods -l app=django-api 